/*
  Screen sizes

  map-get($screen-sizes, 'xs') - mobile phones in portrait mode
  map-get($screen-sizes, 's') - landscape Phones and portrait tablets
  map-get($screen-sizes, 'm') - tablets
  map-get($screen-sizes, 'l') - landscape tablets and small screens
  map-get($screen-sizes, 'xl') - large screens

  Styleguide Variables.ScreenSizes

*/
/* a map for the grid generator to run through and
   generate row classes that handle different gutter sizes */
/* icons have a 2px padding between them in the spritesheet
   in order to avoid bleeding of adjacent elements.
   Because sometimes svg icons get cut off, we compensate by
   adding in a pixel. */
.icon:after {
  content: "";
  position: absolute;
  top: -1px;
  left: -1px;
  right: -1px;
  bottom: -1px;
  background: url(../img/sprites.svg) no-repeat 0 0; }

.icon {
  width: 0;
  height: 0;
  text-indent: -9999px;
  overflow: hidden;
  border: 0;
  background: transparent;
  display: inline-block;
  margin: 0;
  padding: 0;
  position: relative; }

*, *:after, *:before {
  box-sizing: border-box;
  font-weight: normal; }

html {
  overflow-y: scroll; }

body, html {
  margin: 0;
  padding: 0;
  min-height: 100%; }

a {
  color: inherit;
  text-decoration: none; }

hr {
  height: 0;
  line-height: 0;
  background-color: transparent;
  border: 0px solid transparent;
  border-bottom: 1px solid;
  margin: 20px 0; }

img {
  border: none; }

.s-1, .s-2, .s-3, .s-4, .s-5, .s-6, .s-7, .s-8, .s-9, .s-10, .s-11, .s-12, .m-1, .m-2, .m-3, .m-4, .m-5, .m-6, .m-7, .m-8, .m-9, .m-10, .m-11, .m-12, .l-1, .l-2, .l-3, .l-4, .l-5, .l-6, .l-7, .l-8, .l-9, .l-10, .l-11, .l-12, .xl-1, .xl-2, .xl-3, .xl-4, .xl-5, .xl-6, .xl-7, .xl-8, .xl-9, .xl-10, .xl-11, .xl-12, .full-width {
  width: 100%; }

.row, hr, .row-normal, .row-medium, .page-wrapper {
  clear: both; }
  .row:after, hr:after, .row-normal:after, .row-medium:after, .page-wrapper:after {
    clear: both;
    content: "";
    display: table; }

.row, hr, .row-normal, .row-medium {
  display: block; }
  .row > .col, hr > .col, .row-normal > .col, .row-medium > .col {
    float: left; }

.row-normal {
  margin-left: -10px;
  margin-right: -10px; }
  .row-normal > .col {
    padding-left: 10px;
    padding-right: 10px; }
  .row-normal.row-inset {
    margin-left: 0;
    margin-right: 0; }

.row-medium {
  margin-left: -20px;
  margin-right: -20px; }
  .row-medium > .col {
    padding-left: 20px;
    padding-right: 20px; }
  .row-medium.row-inset {
    margin-left: 0;
    margin-right: 0; }

.xs-1 {
  width: 8.3333333333%; }

.xs-2 {
  width: 16.6666666667%; }

.xs-3 {
  width: 25%; }

.xs-4 {
  width: 33.3333333333%; }

.xs-5 {
  width: 41.6666666667%; }

.xs-6 {
  width: 50%; }

.xs-7 {
  width: 58.3333333333%; }

.xs-8 {
  width: 66.6666666667%; }

.xs-9 {
  width: 75%; }

.xs-10 {
  width: 83.3333333333%; }

.xs-11 {
  width: 91.6666666667%; }

.xs-12 {
  width: 100%; }

@media screen and (min-width: 480px) {
  .s-1 {
    width: 8.3333333333%; }
  .s-2 {
    width: 16.6666666667%; }
  .s-3 {
    width: 25%; }
  .s-4 {
    width: 33.3333333333%; }
  .s-5 {
    width: 41.6666666667%; }
  .s-6 {
    width: 50%; }
  .s-7 {
    width: 58.3333333333%; }
  .s-8 {
    width: 66.6666666667%; }
  .s-9 {
    width: 75%; }
  .s-10 {
    width: 83.3333333333%; }
  .s-11 {
    width: 91.6666666667%; }
  .s-12 {
    width: 100%; } }

@media screen and (min-width: 800px) {
  .m-1 {
    width: 8.3333333333%; }
  .m-2 {
    width: 16.6666666667%; }
  .m-3 {
    width: 25%; }
  .m-4 {
    width: 33.3333333333%; }
  .m-5 {
    width: 41.6666666667%; }
  .m-6 {
    width: 50%; }
  .m-7 {
    width: 58.3333333333%; }
  .m-8 {
    width: 66.6666666667%; }
  .m-9 {
    width: 75%; }
  .m-10 {
    width: 83.3333333333%; }
  .m-11 {
    width: 91.6666666667%; }
  .m-12 {
    width: 100%; } }

@media screen and (min-width: 1024px) {
  .l-1 {
    width: 8.3333333333%; }
  .l-2 {
    width: 16.6666666667%; }
  .l-3 {
    width: 25%; }
  .l-4 {
    width: 33.3333333333%; }
  .l-5 {
    width: 41.6666666667%; }
  .l-6 {
    width: 50%; }
  .l-7 {
    width: 58.3333333333%; }
  .l-8 {
    width: 66.6666666667%; }
  .l-9 {
    width: 75%; }
  .l-10 {
    width: 83.3333333333%; }
  .l-11 {
    width: 91.6666666667%; }
  .l-12 {
    width: 100%; } }

@media screen and (min-width: 1200px) {
  .xl-1 {
    width: 8.3333333333%; }
  .xl-2 {
    width: 16.6666666667%; }
  .xl-3 {
    width: 25%; }
  .xl-4 {
    width: 33.3333333333%; }
  .xl-5 {
    width: 41.6666666667%; }
  .xl-6 {
    width: 50%; }
  .xl-7 {
    width: 58.3333333333%; }
  .xl-8 {
    width: 66.6666666667%; }
  .xl-9 {
    width: 75%; }
  .xl-10 {
    width: 83.3333333333%; }
  .xl-11 {
    width: 91.6666666667%; }
  .xl-12 {
    width: 100%; } }

/*
  Text sizes

  Text sizes are available on basic html tags (e.g. h1..h3, p) as well as classes for styling any other element to look like their semantic counterparts.

  markup:
  <div class="row">
    <div class="col xs-6">
      <h1>Heading 1</h1>
      <h2>Heading 2</h2>
      <h3>Heading 3</h3>
      <p>Paragraph</p>
      <p><small>Small text</small></p>
    </div>
    <div class="col xs-6">
      <div class="h1">Heading 1 div</div>
      <div class="h2">Heading 2 div</div>
      <div class="h3">Heading 3 div</div>
      <div class="p">Paragraph div</div>
      <div class="p text-small">Small text div</div>
    </div>
  </div>

  Styleguide Text.Headings

*/
body, ul, ol, li, input, button, input[type="date"], select {
  font-size: 18px;
  font-family: arial, sans-serif; }

h1, .h1 {
  font-size: 4rem;
  margin: 1em 0;
  font-weight: normal; }
  h1-double, .h1-double {
    font-size: 8rem; }

h2, .h2 {
  font-size: 2rem;
  margin: 1em 0;
  font-weight: normal; }
  h2-double, .h2-double {
    font-size: 4rem; }

h3, .h3 {
  font-size: 1.3rem;
  margin: 1em 0;
  font-weight: normal; }
  h3-double, .h3-double {
    font-size: 2.6rem; }

p, .p {
  margin: 1em 0;
  font-size: 1rem;
  font-weight: normal; }

small, .text-small {
  font-size: 0.85rem; }

body {
  font-size: 16px; }

/*
  Text weights

  .text-strong - Stronger text weight
  .text-light - Thin text weight
  .text-bold - Bold text weight

  markup:
  <p><span class="{{modifier_class}}">lorem</span> ipsum dolor sit amet</p>

  Styleguide Text.Weights

*/
strong, b, .text-strong {
  font-weight: bold; }

.text-bold {
  font-weight: bold; }

.text-regular {
  font-family: arial, sans-serif; }

/*
  Text transforms

  .text-uppercase - Transforms all letters to uppercase

  markup:
  <p class="{{modifier_class}}">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nostrum, adipisci.</p>

  Styleguide Text.Transforms

*/
.text-uppercase {
  text-transform: uppercase; }

/*
  .text-no-margin

  For when you need a text size without the margins and paddings that come with it

  markup:
  <div class="pad-sides-normal border-around-thin-dark-grey">
    <h2>Normal heading 2</h2>
  </div>
  <div class="pad-sides-normal border-around-thin-dark-grey">
    <h2 class="text-no-spacing"> No margin heading 2</h2>
  </div>

  Styleguide Text.TextNoSpacing
*/
.text-no-spacing {
  margin-top: 0;
  margin-bottom: 0;
  padding-top: 0;
  padding-bottom: 0; }

.text-align-left {
  text-align: left; }

.text-align-right {
  text-align: right; }

.text-align-center {
  text-align: center; }

/*
  Primary background color

  markup:
  <div class="bg-primary-light pad-around-normal text-color-white">.bg-primary-light</div>
  <div class="bg-primary pad-around-normal text-color-white ">.bg-primary</div>
  <div class="bg-primary-dark pad-around-normal text-color-white">.bg-primary-dark</div>

  Styleguide Colors.Background1
*/
/*
  Secondary background color

  markup:
  <div class="bg-secondary pad-around-normal text-color-white ">.bg-secondary</div>
  <div class="bg-secondary-dark pad-around-normal text-color-white">.bg-secondary-dark</div>

  Styleguide Colors.Background2
*/
/*
  Highlight color

  markup:
  <div class="bg-highlight pad-around-normal text-color-white ">.bg-highlight</div>
  <div class="bg-highlight-dark pad-around-normal text-color-white">.bg-highlight-dark</div>

  Styleguide Colors.Background3
*/
/*
  Mark color

  markup:
  <div class="bg-mark pad-around-normal text-color-normal ">.bg-mark</div>
  <div class="bg-mark-light pad-around-normal text-color-normal">.bg-mark-light</div>

  Styleguide Colors.Background4
*/
/*
  Grey variations

  markup:
  <div class="bg-light-grey pad-around-normal text-color-normal">.bg-light-grey</div>
  <div class="bg-medium-grey pad-around-normal text-color-normal">.bg-medium-grey</div>
  <div class="bg-dark-grey pad-around-normal text-color-normal">.bg-dark-grey</div>
  <div class="bg-dark pad-around-normal text-color-white">.bg-dark</div>
  <div class="bg-normal pad-around-normal text-color-white">.bg-normal (same as default text color)</div>

  Styleguide Colors.Background5
*/
.bg-white {
  background-color: #fff; }

.bg-normal {
  background-color: #333; }

.faded {
  opacity: .5; }

.text-color-white {
  color: #fff; }

.text-color-normal {
  color: #333; }

.center-block {
  margin-left: auto;
  margin-right: auto; }

.page-wrapper {
  max-width: 960px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 20px;
  padding-right: 20px; }

.relative {
  position: relative; }

.absolute-top-left {
  position: absolute;
  top: 0;
  left: 0; }

.absolute-top-right {
  position: absolute;
  top: 0;
  right: 0; }

.absolute-bottom-right {
  position: absolute;
  bottom: 0;
  right: 0; }
  .absolute-bottom-right .btn-icon {
    display: block; }

.visually-hidden, input[type=checkbox], input[type=radio] {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }
  th.visually-hidden {
    position: static;
    width: auto; }

.hidden {
  display: none; }

.display-block {
  display: block; }

.display-inline {
  display: inline; }

.display-inline-block {
  display: inline-block; }

.vertical-middle {
  vertical-align: middle; }

.vertical-top {
  vertical-align: top; }

.vertical-bottom {
  vertical-align: bottom; }

.vertical-align-block {
  display: table;
  position: relative; }
  .vertical-align-block > *, .vertical-align-block > .col {
    display: table-cell;
    float: none; }

.list-reset {
  padding: 0;
  list-style-type: none;
  margin: 0; }

.float-right, .col.float-right {
  float: right; }

.float-left {
  float: left; }

.float-none, .col.float-none {
  float: none; }

.hover-pointer:hover {
  cursor: pointer; }

.icon-add-new-blue {
  width: 19px;
  height: 19px; }
  .icon-add-new-blue:after {
    background-position: 98.0132450331% 33.368%; }
  .icon-add-new-blue.icon-section + * {
    margin-left: 19px; }

.icon-add-new-white {
  width: 24px;
  height: 24px; }
  .icon-add-new-white:after {
    background-position: 66.4383561644% 81.6666666667%; }
  .icon-add-new-white.icon-section + * {
    margin-left: 24px; }

.icon-burger-menu-white {
  width: 64px;
  height: 64px; }
  .icon-burger-menu-white:after {
    background-position: 0 0; }
  .icon-burger-menu-white.icon-section + * {
    margin-left: 64px; }

.icon-calendar-dark {
  width: 22px;
  height: 21px; }
  .icon-calendar-dark:after {
    background-position: 0 100%; }
  .icon-calendar-dark.icon-section + * {
    margin-left: 22px; }

.icon-calendar-white {
  width: 24px;
  height: 24px; }
  .icon-calendar-white:after {
    background-position: 50% 81.6666666667%; }
  .icon-calendar-white.icon-section + * {
    margin-left: 24px; }

.icon-checkmark-green {
  width: 24px;
  height: 19px; }
  .icon-checkmark-green:after {
    background-position: 84.9315068493% 0; }
  .icon-checkmark-green.icon-section + * {
    margin-left: 24px; }

.icon-checkmark-white {
  width: 30px;
  height: 30px; }
  .icon-checkmark-white:after {
    background-position: 45.7142857143% 56.1403508772%; }
  .icon-checkmark-white.icon-section + * {
    margin-left: 30px; }

.icon-chevron-down-dark {
  width: 13px;
  height: 9px; }
  .icon-chevron-down-dark:after {
    background-position: 94.2675159236% 44.9703703704%; }
  .icon-chevron-down-dark.icon-section + * {
    margin-left: 13px; }

.icon-chevron-down-white {
  width: 24px;
  height: 24px; }
  .icon-chevron-down-white:after {
    background-position: 17.1232876712% 81.6666666667%; }
  .icon-chevron-down-white.icon-section + * {
    margin-left: 24px; }

.icon-chevron-right-dark {
  width: 24px;
  height: 24px; }
  .icon-chevron-right-dark:after {
    background-position: 33.5616438356% 81.6666666667%; }
  .icon-chevron-right-dark.icon-section + * {
    margin-left: 24px; }

.icon-chevron-right-white {
  width: 24px;
  height: 24px; }
  .icon-chevron-right-white:after {
    background-position: 84.9315068493% 15.8333333333%; }
  .icon-chevron-right-white.icon-section + * {
    margin-left: 24px; }

.icon-chevron-up-dark {
  width: 13px;
  height: 9px; }
  .icon-chevron-up-dark:after {
    background-position: 94.2675159236% 51.637037037%; }
  .icon-chevron-up-dark.icon-section + * {
    margin-left: 13px; }

.icon-clear-dark {
  width: 25px;
  height: 25px; }
  .icon-clear-dark:after {
    background-position: 64.8275862069% 53.781512605%; }
  .icon-clear-dark.icon-section + * {
    margin-left: 25px; }

.icon-clear-white {
  width: 25px;
  height: 25px; }
  .icon-clear-white:after {
    background-position: 0 82.3529411765%; }
  .icon-clear-white.icon-section + * {
    margin-left: 25px; }

.icon-delete-red {
  width: 19.71px;
  height: 19.71px; }
  .icon-delete-red:after {
    background-position: 98.4762791936% 17.7005390619%; }
  .icon-delete-red.icon-section + * {
    margin-left: 19.71px; }

.icon-delete-white {
  width: 24px;
  height: 24px; }
  .icon-delete-white:after {
    background-position: 84.9315068493% 55.8333333333%; }
  .icon-delete-white.icon-section + * {
    margin-left: 24px; }

.icon-edit-dark {
  width: 30px;
  height: 33px; }
  .icon-edit-dark:after {
    background-position: 24.2857142857% 57.6576576577%; }
  .icon-edit-dark.icon-section + * {
    margin-left: 30px; }

.icon-edit-white {
  width: 24px;
  height: 24px; }
  .icon-edit-white:after {
    background-position: 84.9315068493% 35.8333333333%; }
  .icon-edit-white.icon-section + * {
    margin-left: 24px; }

.icon-plus-dark {
  width: 24px;
  height: 24px; }
  .icon-plus-dark:after {
    background-position: 84.9315068493% 75.8333333333%; }
  .icon-plus-dark.icon-section + * {
    margin-left: 24px; }

.icon-search-dark {
  width: 22px;
  height: 22px; }
  .icon-search-dark:after {
    background-position: 100% 0; }
  .icon-search-dark.icon-section + * {
    margin-left: 22px; }

.icon-setlist-thumb {
  width: 34px;
  height: 34px; }
  .icon-setlist-thumb:after {
    background-position: 0 58.1818181818%; }
  .icon-setlist-thumb.icon-section + * {
    margin-left: 34px; }

.icon-work-thumb {
  width: 60px;
  height: 60px; }
  .icon-work-thumb:after {
    background-position: 58.1818181818% 0; }
  .icon-work-thumb.icon-section + * {
    margin-left: 60px; }

table, .table {
  border-collapse: separate;
  border-spacing: 0;
  width: 100%;
  /*
	.th-hidden

	When a `th` needs to be hidden but still keep any sizing set on it for the `tbody` cells,
	we just reduce the height to 0 so that the width is still used by the table.

	Recommended to use a span with class `.visually-hidden` on the text so that it still remains
	usable by screen readers.

	markup:
	<table>
	  <thead>
      <tr>
        <th class="th-hidden"><span class="visually-hidden">Head 1</span></th>
        <th class="th-hidden"><span class="visually-hidden">Head 2</span></th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Cell 1</td>
        <td>Cell 2</td>
      </tr>
      <tr>
        <td>Cell 3</td>
        <td>Cell 4</td>
      </tr>
    </tbody>
  </table>

	Styleguide Tables.thHidden

*/
  /*
  .row-hover

  Highlight rows and animate cells inside when hovering

	markup:
  <table class="row-hover">
    <thead>
      <tr>
        <th>Head 1</th>
        <th>Head 2</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Cell 1</td>
        <td>Cell 2</td>
      </tr>
      <tr>
        <td>Cell 3</td>
        <td>Cell 4</td>
      </tr>
    </tbody>
  </table>

	Styleguide Tables.RowHover

*/ }
  table th, table td, .table th, .table td {
    padding: 10px 5px; }
    table th:first-child, table td:first-child, .table th:first-child, .table td:first-child {
      padding-left: 0; }
    table th:last-child, table td:last-child, .table th:last-child, .table td:last-child {
      padding-right: 0; }
  table th, .table th {
    text-align: left;
    font-weight: bold;
    text-transform: uppercase; }
  table td, .table td {
    position: relative;
    border-top: 1px solid;
    vertical-align: top; }
  table th.th-hidden, .table th.th-hidden {
    height: 0;
    padding: 0; }
  table.row-hover tbody tr, .table.row-hover tbody tr {
    background-color: transparent;
    transition: background-color 0.15s;
    cursor: pointer; }
    table.row-hover tbody tr td:first-child, .table.row-hover tbody tr td:first-child {
      padding-left: 10px; }
    table.row-hover tbody tr td:last-child, .table.row-hover tbody tr td:last-child {
      padding-right: 10px; }
    table.row-hover tbody tr:hover td, .table.row-hover tbody tr:hover td {
      background-color: transparent;
      color: white;
      border-top-color: transparent; }

/*
	.cells-to-rows-m

	When a table's cells won't fit on an "M" screen size, they
	can be turned into rows with this class.

	markup:
	<table class="cells-to-rows-m">
	  <thead>
	    <tr>
	      <th>Head 1</th>
	      <th>Head 2</th>
	    </tr>
	  </thead>
	  <tbody>
	    <tr>
	      <td>Cell 1</td>
	      <td>Cell 2</td>
	    </tr>
	    <tr>
	      <td>Cell 3</td>
	      <td>Cell 4</td>
	    </tr>
	  </tbody>
	</table>

	Styleguide Tables.CellsToRows

*/
@media screen and (max-width: 799px) {
  .cells-to-rows-m thead, .cells-to-rows-m th {
    display: none; }
  .cells-to-rows-m tr {
    display: block;
    position: relative;
    border-top: 1px solid;
    padding: 10px 0; }
    .cells-to-rows-m tr:first-child {
      border-top: none; }
    .cells-to-rows-m tr:hover td {
      background: transparent; }
  .cells-to-rows-m td {
    display: block;
    border-top: none;
    position: static;
    padding: 0; }
  .cells-to-rows-m.row-hover tbody tr td {
    transition: none;
    transform: none; }
  .cells-to-rows-m.row-hover tbody tr:hover {
    background-color: transparent; }
    .cells-to-rows-m.row-hover tbody tr:hover td {
      background-color: transparent;
      transform: none;
      color: #333;
      border-top-color: transparent; } }

@keyframes wobble-right {
  0% {
    transform: translateX(0px); }
  50% {
    transform: translateX(2px); }
  100% {
    transform: translateX(0px); } }

@keyframes wobble-top {
  0% {
    transform: translate3d(0px, 0px, 0px); }
  50% {
    transform: translate3d(0px, -3px, 0px); }
  100% {
    transform: translate3d(0px, 0px, 0px); } }

@keyframes circle {
  from {
    transform: rotate(0deg) translate(-2px) rotate(0deg); }
  to {
    transform: rotate(360deg) translate(-2px) rotate(-360deg); } }

/*

  .show-on-[screen size]

  Shows the element on a specific range of screen sizes (for example, only on mobile or only on tablet)

  The [size] keywords required are the names of the keys in the $screen-sizes map of the global _vars file.

  markup:
  <div class="row">Sample content:</div>
  <div class="show-on-m">
    Show me on "M" screen sizes
  </div>

  Styleguide Visibility.ShowOn

*/
/*
  .show-until-[screen size]

  Shows the element on all screens starting with the one specified in [size].

  The [size] keywords required are the names of the keys in the $screen-sizes map of the global _vars file.

  markup:
  <div class="row">Sample content:</div>
  <div class="show-until-m">
    Show me until reaching "M" screen size
  </div>

  Styleguide Visibility.ShowUntil

*/
/*
  .show-from-[screen size]

  Shows the element up until the screen size specified in [size]

  The [size] keywords required are the names of the keys in the $screen-sizes map of the global _vars file.

  markup:
  <div class="row">Sample content:</div>
  <div class="show-from-m">
    Show me beginning with "M" screen sizes
  </div>

  Styleguide Visibility.ShowFrom

*/
/* generate padding classes for elements

.pad-[side]-[size]

  * [side] can be one of the following: left, right, top, bottom, row, sides, around
    - .pad-left...pad-bottom - first four are self explanatory
    - .pad-row means adding padding to top and bottom
    - .pad-sides means adding padding padding to left and right
    - .pad-around means all sides

  * [size] gets values from the global $gutters variable and uses the generic notation:
    e.g.: small, normal, medium, large */
.pad-left-small {
  padding-left: 5px; }

.pad-right-small {
  padding-right: 5px; }

.pad-top-small {
  padding-top: 5px; }

.pad-bottom-small {
  padding-bottom: 5px; }

.pad-sides-small {
  padding-left: 5px;
  padding-right: 5px; }

.pad-row-small {
  padding-top: 5px;
  padding-bottom: 5px; }

.pad-around-small {
  padding: 5px; }

.pad-left-normal {
  padding-left: 10px; }

.pad-right-normal {
  padding-right: 10px; }

.pad-top-normal {
  padding-top: 10px; }

.pad-bottom-normal {
  padding-bottom: 10px; }

.pad-sides-normal {
  padding-left: 10px;
  padding-right: 10px; }

.pad-row-normal {
  padding-top: 10px;
  padding-bottom: 10px; }

.pad-around-normal {
  padding: 10px; }

.pad-left-medium {
  padding-left: 20px; }

.pad-right-medium {
  padding-right: 20px; }

.pad-top-medium {
  padding-top: 20px; }

.pad-bottom-medium {
  padding-bottom: 20px; }

.pad-sides-medium {
  padding-left: 20px;
  padding-right: 20px; }

.pad-row-medium {
  padding-top: 20px;
  padding-bottom: 20px; }

.pad-around-medium {
  padding: 20px; }

.pad-left-large {
  padding-left: 40px; }

.pad-right-large {
  padding-right: 40px; }

.pad-top-large {
  padding-top: 40px; }

.pad-bottom-large {
  padding-bottom: 40px; }

.pad-sides-large {
  padding-left: 40px;
  padding-right: 40px; }

.pad-row-large {
  padding-top: 40px;
  padding-bottom: 40px; }

.pad-around-large {
  padding: 40px; }

.btn {
  -webkit-appearance: none;
  border: 1px solid transparent;
  border-radius: 40px;
  color: white;
  display: inline-block;
  font-family: arial, sans-serif;
  font-weight: normal;
  font-size: 1rem;
  padding: 0.55rem 1.11rem;
  text-decoration: none;
  transition: all .3s;
  text-align: center;
  text-transform: uppercase; }
  .btn .icon {
    display: inline-block;
    margin-top: -2px;
    margin-right: 5px; }
  .btn:hover {
    text-decoration: none;
    cursor: pointer; }
  .btn:disabled {
    opacity: .35;
    font-family: arial, sans-serif;
    font-weight: normal; }
  .btn-small {
    font-size: 1rem;
    min-height: 30px;
    line-height: 29px;
    padding: 0px 15px; }
  .btn-large {
    min-height: 50px;
    line-height: 49px;
    font-size: 1.3rem; }
  .btn-transparent {
    background-color: transparent;
    border-color: transparent;
    padding: 0 5px; }
    .btn-transparent:hover {
      background-color: transparent;
      text-decoration: underline; }
  .btn-outline {
    border: 1px solid;
    background-color: transparent; }
    .btn-outline:hover {
      background-color: rgba(0, 0, 0, 0.1); }
  .btn-icon {
    padding: 0;
    height: 30px;
    line-height: 30px;
    width: 30px;
    background-color: transparent;
    border: none;
    border-radius: 0;
    overflow: hidden; }
    .btn-icon .icon {
      margin-right: 0;
      margin-top: -1px; }
    .btn-icon:hover {
      background-color: transparent; }

.field, .select {
  height: 50px;
  -webkit-appearance: none;
  appearance: none;
  padding: 0;
  border: none;
  border-bottom: 1px solid;
  background: transparent;
  border-radius: 0;
  margin: 0;
  width: 100%;
  font-size: 1.3rem;
  transition: all 0.3s;
  /* >> special styling for date fields >> */
  /* << end special styling for date fields << */
  /* .field-group
    wrapper for each label/input pair */
  /* .field-label
    generic label styling */
  /* .field-secondary
    primary or highlighted fields (the red ones) */
  /* .field-white
    input fields with white background */
  /* >> .field-icon >>
    generic styling of input field icons */
  /*

  Input field with icon

  markup:
  <div class="field-group pad-row-medium">
    <label for="performancePerformer" class="field-label">The performer was</label>
    <div class="field-icon-container">
      <input type="text" id="performancePerformer" class="field" placeholder="Add name or band name">
      <span class="field-icon icon icon-search-dark" role="presentation"></span>
    </div>
  </div>

  Styleguide Forms.InputWithIcon

  */
  /* << end .field-icon << */ }
  .field:hover, .select:hover {
    cursor: pointer; }
  .field::-ms-clear, .select::-ms-clear {
    display: none; }
  .field-small {
    padding: 0 10px;
    height: 30px;
    font-size: 1rem; }
  .field-flat {
    box-shadow: none; }
  .field:focus, .select:focus {
    outline: none;
    border-bottom-width: 2px; }
  .field::-webkit-input-placeholder, .select::-webkit-input-placeholder {
    /* Chrome/Opera/Safari */
    color: #333;
    opacity: 1; }
  .field::-moz-placeholder, .select::-moz-placeholder {
    /* Firefox 19+ */
    color: #333;
    opacity: 1; }
  .field:-ms-input-placeholder, .select:-ms-input-placeholder {
    /* IE 10+ */
    color: #333;
    opacity: 1; }
  .field:-moz-placeholder, .select:-moz-placeholder {
    /* Firefox 18- */
    color: #333;
    opacity: 1; }
  .field::placeholder, .select::placeholder {
    font-family: arial, sans-serif; }
  .field[type=date]::-webkit-inner-spin-button, [type=date].select::-webkit-inner-spin-button, .field[type=date]::-webkit-calendar-picker-indicator, [type=date].select::-webkit-calendar-picker-indicator {
    display: none;
    -webkit-appearance: none; }
  .field::-webkit-datetime-edit-fields-wrapper, .select::-webkit-datetime-edit-fields-wrapper, .field::-webkit-calendar-picker-indicator, .select::-webkit-calendar-picker-indicator {
    font-size: 1.3rem; }
  .field-group {
    padding-top: 20px;
    padding-bottom: 20px; }
  .field-label {
    display: block;
    font-weight: normal;
    font-size: 0.85rem;
    text-transform: uppercase;
    text-align: left;
    padding-bottom: 5px; }
  .field-secondary::-webkit-input-placeholder {
    /* Chrome/Opera/Safari */
    color: white;
    opacity: 1; }
  .field-secondary::-moz-placeholder {
    /* Firefox 19+ */
    color: white;
    opacity: 1; }
  .field-secondary:-ms-input-placeholder {
    /* IE 10+ */
    color: white;
    opacity: 1; }
  .field-secondary:-moz-placeholder {
    /* Firefox 18- */
    color: white;
    opacity: 1; }
  .field-white {
    background-color: white; }
    .field-white::-webkit-input-placeholder {
      /* Chrome/Opera/Safari */
      color: #333;
      opacity: 1; }
    .field-white::-moz-placeholder {
      /* Firefox 19+ */
      color: #333;
      opacity: 1; }
    .field-white:-ms-input-placeholder {
      /* IE 10+ */
      color: #333;
      opacity: 1; }
    .field-white:-moz-placeholder {
      /* Firefox 18- */
      color: #333;
      opacity: 1; }
  .field-icon {
    position: absolute;
    top: 18px;
    right: 18px; }
  .field-icon-container {
    position: relative; }
    .field-icon-container .field, .field-icon-container .select {
      padding-right: 50px; }
  .field ~ .icon, .select ~ .icon {
    top: 1px;
    right: 1px;
    width: 50px;
    height: auto;
    bottom: 1px;
    z-index: 1;
    overflow: visible;
    /* add a little shadow on top of overflowing content so that it gets
       cut off nicely underneath icons*/ }
    .field ~ .icon:after, .select ~ .icon:after {
      top: 50%;
      right: 50%;
      left: auto;
      width: 24px;
      height: 24px;
      margin-top: -12px;
      margin-right: -12px; }
    .field ~ .icon:before, .select ~ .icon:before {
      content: "";
      position: absolute;
      top: 0;
      bottom: 0;
      right: 50px;
      width: 10px; }
    .field ~ .icon:hover, .select ~ .icon:hover {
      cursor: pointer; }

.select {
  color: white; }
  .select::-ms-expand {
    display: none; }
  .select option {
    background-color: white;
    font-size: 1.3rem;
    color: #333; }
  .field-icon-container .select {
    padding-right: 45px; }

fieldset, .fieldset {
  border: none;
  padding: 0;
  margin: 0;
  float: left;
  display: block;
  width: 100%; }

input[type=checkbox]:focus + label:after, input[type=radio]:focus + label:after, input[type=checkbox]:focus + label:before, input[type=radio]:focus + label:before {
  box-shadow: 0 0 5px #333333; }

input[type=checkbox] + label, input[type=radio] + label {
  position: relative;
  display: block;
  line-height: 30px;
  padding-right: 20px;
  font-size: 1rem;
  padding-bottom: 10px;
  margin: 0;
  padding-top: 0; }
  input[type=checkbox] + label:hover, input[type=radio] + label:hover {
    cursor: pointer; }
  input[type=checkbox] + label:before, input[type=radio] + label:before {
    content: "";
    display: inline-block;
    width: 30px;
    height: 30px;
    line-height: 30px;
    vertical-align: text-bottom;
    background: white;
    border: 2px solid;
    margin-right: 10px; }
  input[type=checkbox] + label:after, input[type=radio] + label:after {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 30px;
    height: 30px;
    transform: scale(0);
    background: url(../img/sprites.svg) 45.7142857143% 56.1403508772% no-repeat;
    border: 2px solid;
    transition: transform 0.3s; }
  .lt-ie10 input[type=checkbox] + label:after, .lt-ie10 input[type=radio] + label:after {
    display: none;
    top: 9px; }

input[type=checkbox]:checked + label:after, input[type=radio]:checked + label:after {
  transform: scale(1); }

.lt-ie10 input[type=checkbox]:checked + label:after, .lt-ie10 input[type=radio]:checked + label:after {
  display: block; }

input[type=radio] + label:before, input[type=radio] + label:after {
  border-radius: 100%;
  width: 22px;
  height: 22px;
  display: block;
  float: left; }

input[type=radio] + label:after {
  width: 10px;
  height: 10px;
  top: 6px;
  left: 6px; }

/*# sourceMappingURL=styles.css.map */